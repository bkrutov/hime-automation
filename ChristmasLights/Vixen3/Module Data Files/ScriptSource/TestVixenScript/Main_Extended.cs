
/*
This File is dynamically generated by Vixen 3 every time the script is run and compiled.  
Changes made to this file WILL BE LOST every time the script is run so DO NOT MODIFY this file!
*/
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Dynamic;
using Vixen.Sys;
using Vixen.Module.SequenceType;
using Vixen.Module.Effect;
using Vixen.Module.Script;
using Vixen.Commands;
using ValueTypes=Common.ValueTypes ;

namespace Vixen.User {
	public partial class TestVixenScript : UserScriptHost {
		private UserScriptNode[] _nodes;
		// Effect name : Effect type id
		private Dictionary<string, Guid> _effects = new Dictionary<string, Guid>();

		public TestVixenScript() {
			_nodes = VixenSystem.Nodes.Select(x => new UserScriptNode(x)).ToArray();
			_effects["Alternating"] = new Guid("7b791008-56a2-4bff-8ce3-a7fb89ea4637");
			_effects["Candle_Flicker"] = new Guid("504582d2-43ac-472e-8885-ec4bcbf2b1f7");
			_effects["Chase"] = new Guid("affea852-85b1-418f-9cdf-0b9735154bb5");
			_effects["Custom_Value"] = new Guid("0c4095bf-a9b4-425b-97b8-c0251dd5ad47");
			_effects["Launcher"] = new Guid("635364fd-b942-47e0-8b82-55d5e77a27c8");
			_effects["LipSync"] = new Guid("52f17f4b-2159-4820-8660-05cd9d1f47c1");
			_effects["Nutcracker"] = new Guid("82334cb3-9472-42fe-a221-8482f5c731db");
			_effects["Pulse"] = new Guid("cbd76d3b-c924-40ff-bad6-d1437b3dbdc0");
			_effects["RDS"] = new Guid("afb67313-a17b-4fc3-9e0d-b564934423d5");
			_effects["Set_Level"] = new Guid("32cff8e0-5b10-4466-a093-0d232c55aac0");
			_effects["Spin"] = new Guid("821a8540-ea34-401f-a8aa-416d7d9a196a");
			_effects["Twinkle"] = new Guid("83bdd6f7-19c7-4598-b8e3-7ce28c44e7db");
			_effects["Wipe"] = new Guid("61746b54-a96c-4723-8bd6-39c7ea985f80");
		
		}

		public void PreRenderEffect(EffectNode effectNode) {
			if(effectNode != null) {
				effectNode.Effect.PreRender();
			}
		}

		public void PreRenderEffects(IEnumerable<EffectNode> effectNodes) {
			if(effectNodes != null) {
				effectNodes.AsParallel().ForAll(x => x.Effect.PreRender());
			}
		}

		public void Execute(EffectNode effectNode) {
			if(effectNode != null) {
				Sequence.InsertData(effectNode);
			}
		}

		public void Execute(IEnumerable<EffectNode> effectNodes) {
			if(effectNodes != null) {
				Sequence.InsertData(effectNodes);
			}
		}
		
		public void Notify(string msg) {
            Vixen.Common.MessageStack.ScriptingRuntimeMessages.Enqueue(msg);
        }
		
		public EffectNode CreateEffectNode(string effectName, IEnumerable<UserScriptNode> targetNodes, TimeSpan timeSpan, params object[] args) {
			Guid effectId;
			if(_effects.TryGetValue(effectName, out effectId)) {
				IEffectModuleInstance effect = Vixen.Services.ApplicationServices.Get<IEffectModuleInstance>(effectId);
				effect.TimeSpan = timeSpan;
				effect.TargetNodes = targetNodes.Select(x => x.Node).ToArray();
				effect.ParameterValues = args;
				return new EffectNode(effect, TimeSpan.Zero);
			}

			return null;
		}
		
// == Effects ==

		// Original name: Alternating
		public void Alternating(IEnumerable<UserScriptNode> targetNodes, TimeSpan timeSpan, System.Double Level1, System.Drawing.Color Color1, System.Double Level2, System.Drawing.Color Color2, System.Double Interval, System.Boolean Enable, System.Int32 DepthOfEffect, System.Int32 GroupEffect, System.Boolean StaticColor1, System.Boolean StaticColor2, VixenModules.App.ColorGradients.ColorGradient ColorGradient1, VixenModules.App.ColorGradients.ColorGradient ColorGradient2, VixenModules.App.Curves.Curve Curve1, VixenModules.App.Curves.Curve Curve2) {
			_InvokeEffect("Alternating", targetNodes, timeSpan, Level1, Color1, Level2, Color2, Interval, Enable, DepthOfEffect, GroupEffect, StaticColor1, StaticColor2, ColorGradient1, ColorGradient2, Curve1, Curve2);
		}

		// Original name: Candle Flicker
		public void Candle_Flicker(IEnumerable<UserScriptNode> targetNodes, TimeSpan timeSpan, System.Int32 Flicker_frequency__changes_per_second_, ValueTypes.Percentage Change_percentage__absolute_, ValueTypes.Percentage Minimum_level, ValueTypes.Percentage Maximum_level, ValueTypes.Percentage Flicker_frequency_deviation_cap, ValueTypes.Percentage Change_percentage_deviation_cap) {
			_InvokeEffect("Candle_Flicker", targetNodes, timeSpan, Flicker_frequency__changes_per_second_, Change_percentage__absolute_, Minimum_level, Maximum_level, Flicker_frequency_deviation_cap, Change_percentage_deviation_cap);
		}

		// Original name: Chase
		public void Chase(IEnumerable<UserScriptNode> targetNodes, TimeSpan timeSpan, VixenModules.Effect.Chase.ChaseColorHandling Color_Handling, System.Int32 Pulse_Overlap, System.Double Default_element_level, System.Drawing.Color Static_Color, VixenModules.App.ColorGradients.ColorGradient Color_Gradient, VixenModules.App.Curves.Curve Individual_Pulse_Curve, VixenModules.App.Curves.Curve Chase_Movement_Curve, System.Int32 Depth_of_Effect, System.Boolean Extend_Pulse_to_Start, System.Boolean Extend_Pulse_to_End) {
			_InvokeEffect("Chase", targetNodes, timeSpan, Color_Handling, Pulse_Overlap, Default_element_level, Static_Color, Color_Gradient, Individual_Pulse_Curve, Chase_Movement_Curve, Depth_of_Effect, Extend_Pulse_to_Start, Extend_Pulse_to_End);
		}

		// Original name: Custom Value
		public void Custom_Value(IEnumerable<UserScriptNode> targetNodes, TimeSpan timeSpan, VixenModules.Effect.CustomValue.CustomValueType Value_Type, System.Byte _8_bit_value, System.UInt16 _16_bit_value, System.UInt32 _32_bit_value, System.UInt64 _64_bit_value, System.Drawing.Color color_value, System.String string_value) {
			_InvokeEffect("Custom_Value", targetNodes, timeSpan, Value_Type, _8_bit_value, _16_bit_value, _32_bit_value, _64_bit_value, color_value, string_value);
		}

		// Original name: Launcher
		public void Launcher(IEnumerable<UserScriptNode> targetNodes, TimeSpan timeSpan, System.String Description, System.String Executable, System.String Arguments) {
			_InvokeEffect("Launcher", targetNodes, timeSpan, Description, Executable, Arguments);
		}

		// Original name: LipSync
		public void LipSync(IEnumerable<UserScriptNode> targetNodes, TimeSpan timeSpan, System.String StaticPhoneme, System.String PGOFilename, System.String PhonemeMapping) {
			_InvokeEffect("LipSync", targetNodes, timeSpan, StaticPhoneme, PGOFilename, PhonemeMapping);
		}

		// Original name: Nutcracker
		public void Nutcracker(IEnumerable<UserScriptNode> targetNodes, TimeSpan timeSpan, VixenModules.Effect.Nutcracker.NutcrackerData NutcrackerData) {
			_InvokeEffect("Nutcracker", targetNodes, timeSpan, NutcrackerData);
		}

		// Original name: Pulse
		public void Pulse(IEnumerable<UserScriptNode> targetNodes, TimeSpan timeSpan, VixenModules.App.Curves.Curve Intensity_Curve, VixenModules.App.ColorGradients.ColorGradient Color_Gradient) {
			_InvokeEffect("Pulse", targetNodes, timeSpan, Intensity_Curve, Color_Gradient);
		}

		// Original name: RDS
		public void RDS(IEnumerable<UserScriptNode> targetNodes, TimeSpan timeSpan, System.String Title, System.String Artist) {
			_InvokeEffect("RDS", targetNodes, timeSpan, Title, Artist);
		}

		// Original name: Set Level
		public void Set_Level(IEnumerable<UserScriptNode> targetNodes, TimeSpan timeSpan, System.Double Level, System.Drawing.Color Color) {
			_InvokeEffect("Set_Level", targetNodes, timeSpan, Level, Color);
		}

		// Original name: Spin
		public void Spin(IEnumerable<UserScriptNode> targetNodes, TimeSpan timeSpan, VixenModules.Effect.Spin.SpinSpeedFormat Spin_Speed_Format, VixenModules.Effect.Spin.SpinPulseLengthFormat Pulse_Length_Format, VixenModules.Effect.Spin.SpinColorHandling Color_Handling, System.Double Revolution_Count, System.Double Revolution_Speed__Hz_, System.Int32 Revolution_Time__ms_, System.Int32 Pulse_Time, System.Int32 Pulse_Percentage__of_revolution_, System.Double Default_element_level, System.Drawing.Color Static_Color, VixenModules.App.ColorGradients.ColorGradient Color_Gradient, VixenModules.App.Curves.Curve Individual_Pulse_Curve, System.Boolean Reverse_Spin, System.Int32 Depth_of_Effect) {
			_InvokeEffect("Spin", targetNodes, timeSpan, Spin_Speed_Format, Pulse_Length_Format, Color_Handling, Revolution_Count, Revolution_Speed__Hz_, Revolution_Time__ms_, Pulse_Time, Pulse_Percentage__of_revolution_, Default_element_level, Static_Color, Color_Gradient, Individual_Pulse_Curve, Reverse_Spin, Depth_of_Effect);
		}

		// Original name: Twinkle
		public void Twinkle(IEnumerable<UserScriptNode> targetNodes, TimeSpan timeSpan, System.Boolean Individual_Elements, System.Double Minimum_Level, System.Double Maximum_Level, System.Int32 Level_Variation____, System.Int32 Average_Pulse_Time__ms_, System.Int32 Pulse_Time_Variation____, System.Int32 Average_Coverage____, VixenModules.Effect.Twinkle.TwinkleColorHandling Color_Handling, System.Drawing.Color Static_Color, VixenModules.App.ColorGradients.ColorGradient Color_Gradient, System.Int32 Depth_of_Effect) {
			_InvokeEffect("Twinkle", targetNodes, timeSpan, Individual_Elements, Minimum_Level, Maximum_Level, Level_Variation____, Average_Pulse_Time__ms_, Pulse_Time_Variation____, Average_Coverage____, Color_Handling, Static_Color, Color_Gradient, Depth_of_Effect);
		}

		// Original name: Wipe
		public void Wipe(IEnumerable<UserScriptNode> targetNodes, TimeSpan timeSpan, VixenModules.App.ColorGradients.ColorGradient Color_Gradient, VixenModules.Effect.Wipe.WipeDirection Direction, VixenModules.App.Curves.Curve Curve, System.Int32 Pulse_Time) {
			_InvokeEffect("Wipe", targetNodes, timeSpan, Color_Gradient, Direction, Curve, Pulse_Time);
		}


		// == Nodes ==
		
		// Original name: P-1-Top
		public dynamic P_1_Top { 
			get { return _nodes[0]; }
		}
		// Original name: P-2
		public dynamic P_2 { 
			get { return _nodes[1]; }
		}
		// Original name: P-3
		public dynamic P_3 { 
			get { return _nodes[2]; }
		}
		// Original name: P-4
		public dynamic P_4 { 
			get { return _nodes[3]; }
		}
		// Original name: P-5-L1-End
		public dynamic P_5_L1_End { 
			get { return _nodes[4]; }
		}
		// Original name: P-6
		public dynamic P_6 { 
			get { return _nodes[5]; }
		}
		// Original name: P-7
		public dynamic P_7 { 
			get { return _nodes[6]; }
		}
		// Original name: P-8
		public dynamic P_8 { 
			get { return _nodes[7]; }
		}
		// Original name: P-9
		public dynamic P_9 { 
			get { return _nodes[8]; }
		}
		// Original name: P-10
		public dynamic P_10 { 
			get { return _nodes[9]; }
		}
		// Original name: P-11
		public dynamic P_11 { 
			get { return _nodes[10]; }
		}
		// Original name: P-12
		public dynamic P_12 { 
			get { return _nodes[11]; }
		}
		// Original name: P-13
		public dynamic P_13 { 
			get { return _nodes[12]; }
		}
		// Original name: P-14
		public dynamic P_14 { 
			get { return _nodes[13]; }
		}
		// Original name: P-15-L2-End
		public dynamic P_15_L2_End { 
			get { return _nodes[14]; }
		}
		// Original name: P-16
		public dynamic P_16 { 
			get { return _nodes[15]; }
		}
		// Original name: P-17
		public dynamic P_17 { 
			get { return _nodes[16]; }
		}
		// Original name: P-18
		public dynamic P_18 { 
			get { return _nodes[17]; }
		}
		// Original name: P-19
		public dynamic P_19 { 
			get { return _nodes[18]; }
		}
		// Original name: P-20
		public dynamic P_20 { 
			get { return _nodes[19]; }
		}
		// Original name: P-21
		public dynamic P_21 { 
			get { return _nodes[20]; }
		}
		// Original name: P-22
		public dynamic P_22 { 
			get { return _nodes[21]; }
		}
		// Original name: P-23
		public dynamic P_23 { 
			get { return _nodes[22]; }
		}
		// Original name: P-24
		public dynamic P_24 { 
			get { return _nodes[23]; }
		}
		// Original name: P-25
		public dynamic P_25 { 
			get { return _nodes[24]; }
		}
		// Original name: P-26
		public dynamic P_26 { 
			get { return _nodes[25]; }
		}
		// Original name: P-27
		public dynamic P_27 { 
			get { return _nodes[26]; }
		}
		// Original name: P-28
		public dynamic P_28 { 
			get { return _nodes[27]; }
		}
		// Original name: P-29
		public dynamic P_29 { 
			get { return _nodes[28]; }
		}
		// Original name: P-30
		public dynamic P_30 { 
			get { return _nodes[29]; }
		}
		// Original name: P-31
		public dynamic P_31 { 
			get { return _nodes[30]; }
		}
		// Original name: P-32
		public dynamic P_32 { 
			get { return _nodes[31]; }
		}
		// Original name: P-33-L3-End
		public dynamic P_33_L3_End { 
			get { return _nodes[32]; }
		}
		// Original name: P-34
		public dynamic P_34 { 
			get { return _nodes[33]; }
		}
		// Original name: P-35
		public dynamic P_35 { 
			get { return _nodes[34]; }
		}
		// Original name: P-36
		public dynamic P_36 { 
			get { return _nodes[35]; }
		}
		// Original name: P-37
		public dynamic P_37 { 
			get { return _nodes[36]; }
		}
		// Original name: P-38
		public dynamic P_38 { 
			get { return _nodes[37]; }
		}
		// Original name: P-39
		public dynamic P_39 { 
			get { return _nodes[38]; }
		}
		// Original name: P-40
		public dynamic P_40 { 
			get { return _nodes[39]; }
		}
		// Original name: P-41
		public dynamic P_41 { 
			get { return _nodes[40]; }
		}
		// Original name: P-42
		public dynamic P_42 { 
			get { return _nodes[41]; }
		}
		// Original name: P-43
		public dynamic P_43 { 
			get { return _nodes[42]; }
		}
		// Original name: P-44
		public dynamic P_44 { 
			get { return _nodes[43]; }
		}
		// Original name: P-45
		public dynamic P_45 { 
			get { return _nodes[44]; }
		}
		// Original name: P-46
		public dynamic P_46 { 
			get { return _nodes[45]; }
		}
		// Original name: P-47
		public dynamic P_47 { 
			get { return _nodes[46]; }
		}
		// Original name: P-48
		public dynamic P_48 { 
			get { return _nodes[47]; }
		}
		// Original name: P-49
		public dynamic P_49 { 
			get { return _nodes[48]; }
		}
		// Original name: P-50
		public dynamic P_50 { 
			get { return _nodes[49]; }
		}
		// Original name: P-51
		public dynamic P_51 { 
			get { return _nodes[50]; }
		}
		// Original name: P-52
		public dynamic P_52 { 
			get { return _nodes[51]; }
		}
		// Original name: P-53
		public dynamic P_53 { 
			get { return _nodes[52]; }
		}
		// Original name: P-54
		public dynamic P_54 { 
			get { return _nodes[53]; }
		}
		// Original name: P-55
		public dynamic P_55 { 
			get { return _nodes[54]; }
		}
		// Original name: P-56
		public dynamic P_56 { 
			get { return _nodes[55]; }
		}
		// Original name: P-57
		public dynamic P_57 { 
			get { return _nodes[56]; }
		}
		// Original name: P-58
		public dynamic P_58 { 
			get { return _nodes[57]; }
		}
		// Original name: P-59
		public dynamic P_59 { 
			get { return _nodes[58]; }
		}
		// Original name: P-60
		public dynamic P_60 { 
			get { return _nodes[59]; }
		}
		// Original name: P-61-L4-End
		public dynamic P_61_L4_End { 
			get { return _nodes[60]; }
		}
		// Original name: P-62
		public dynamic P_62 { 
			get { return _nodes[61]; }
		}
		// Original name: P-63
		public dynamic P_63 { 
			get { return _nodes[62]; }
		}
		// Original name: P-64
		public dynamic P_64 { 
			get { return _nodes[63]; }
		}
		// Original name: P-65
		public dynamic P_65 { 
			get { return _nodes[64]; }
		}
		// Original name: P-66
		public dynamic P_66 { 
			get { return _nodes[65]; }
		}
		// Original name: P-67
		public dynamic P_67 { 
			get { return _nodes[66]; }
		}
		// Original name: P-68
		public dynamic P_68 { 
			get { return _nodes[67]; }
		}
		// Original name: P-69
		public dynamic P_69 { 
			get { return _nodes[68]; }
		}
		// Original name: P-70
		public dynamic P_70 { 
			get { return _nodes[69]; }
		}
		// Original name: P-71
		public dynamic P_71 { 
			get { return _nodes[70]; }
		}
		// Original name: P-72
		public dynamic P_72 { 
			get { return _nodes[71]; }
		}
		// Original name: P-73
		public dynamic P_73 { 
			get { return _nodes[72]; }
		}
		// Original name: P-74
		public dynamic P_74 { 
			get { return _nodes[73]; }
		}
		// Original name: P-75
		public dynamic P_75 { 
			get { return _nodes[74]; }
		}
		// Original name: P-76
		public dynamic P_76 { 
			get { return _nodes[75]; }
		}
		// Original name: P-77
		public dynamic P_77 { 
			get { return _nodes[76]; }
		}
		// Original name: P-78
		public dynamic P_78 { 
			get { return _nodes[77]; }
		}
		// Original name: P-79
		public dynamic P_79 { 
			get { return _nodes[78]; }
		}
		// Original name: P-80
		public dynamic P_80 { 
			get { return _nodes[79]; }
		}
		// Original name: P-81
		public dynamic P_81 { 
			get { return _nodes[80]; }
		}
		// Original name: P-82
		public dynamic P_82 { 
			get { return _nodes[81]; }
		}
		// Original name: P-83
		public dynamic P_83 { 
			get { return _nodes[82]; }
		}
		// Original name: P-84
		public dynamic P_84 { 
			get { return _nodes[83]; }
		}
		// Original name: P-85
		public dynamic P_85 { 
			get { return _nodes[84]; }
		}
		// Original name: P-86
		public dynamic P_86 { 
			get { return _nodes[85]; }
		}
		// Original name: P-87
		public dynamic P_87 { 
			get { return _nodes[86]; }
		}
		// Original name: P-88
		public dynamic P_88 { 
			get { return _nodes[87]; }
		}
		// Original name: P-89-L5-End
		public dynamic P_89_L5_End { 
			get { return _nodes[88]; }
		}
		// Original name: P-90
		public dynamic P_90 { 
			get { return _nodes[89]; }
		}
		// Original name: P-91
		public dynamic P_91 { 
			get { return _nodes[90]; }
		}
		// Original name: P-92
		public dynamic P_92 { 
			get { return _nodes[91]; }
		}
		// Original name: P-93
		public dynamic P_93 { 
			get { return _nodes[92]; }
		}
		// Original name: P-94
		public dynamic P_94 { 
			get { return _nodes[93]; }
		}
		// Original name: P-95
		public dynamic P_95 { 
			get { return _nodes[94]; }
		}
		// Original name: P-96
		public dynamic P_96 { 
			get { return _nodes[95]; }
		}
		// Original name: P-97
		public dynamic P_97 { 
			get { return _nodes[96]; }
		}
		// Original name: P-98
		public dynamic P_98 { 
			get { return _nodes[97]; }
		}
		// Original name: P-99
		public dynamic P_99 { 
			get { return _nodes[98]; }
		}
		// Original name: P-100-Bottom
		public dynamic P_100_Bottom { 
			get { return _nodes[99]; }
		}
		// Original name: All Pixels
		public dynamic All_Pixels { 
			get { return _nodes[100]; }
		}
		// Original name: L1-Front
		public dynamic L1_Front { 
			get { return _nodes[101]; }
		}
		// Original name: Line 1 - Top
		public dynamic Line_1___Top { 
			get { return _nodes[102]; }
		}
		// Original name: L2-Back
		public dynamic L2_Back { 
			get { return _nodes[103]; }
		}
		// Original name: L2-Front
		public dynamic L2_Front { 
			get { return _nodes[104]; }
		}
		// Original name: Line 2
		public dynamic Line_2 { 
			get { return _nodes[105]; }
		}
		// Original name: L3-Back
		public dynamic L3_Back { 
			get { return _nodes[106]; }
		}
		// Original name: L3-Front
		public dynamic L3_Front { 
			get { return _nodes[107]; }
		}
		// Original name: Line 3
		public dynamic Line_3 { 
			get { return _nodes[108]; }
		}
		// Original name: L4-Back
		public dynamic L4_Back { 
			get { return _nodes[109]; }
		}
		// Original name: L4-Front
		public dynamic L4_Front { 
			get { return _nodes[110]; }
		}
		// Original name: Line 4
		public dynamic Line_4 { 
			get { return _nodes[111]; }
		}
		// Original name: L5-Back
		public dynamic L5_Back { 
			get { return _nodes[112]; }
		}
		// Original name: L5-Front
		public dynamic L5_Front { 
			get { return _nodes[113]; }
		}
		// Original name: Line 5
		public dynamic Line_5 { 
			get { return _nodes[114]; }
		}
		// Original name: L6-Back
		public dynamic L6_Back { 
			get { return _nodes[115]; }
		}
		// Original name: Line 6 - Bottom
		public dynamic Line_6___Bottom { 
			get { return _nodes[116]; }
		}
		// Original name: By Lines
		public dynamic By_Lines { 
			get { return _nodes[117]; }
		}
		// Original name: Megatree S1
		public dynamic Megatree_S1 { 
			get { return _nodes[118]; }
		}
		// Original name: Megatree S2
		public dynamic Megatree_S2 { 
			get { return _nodes[119]; }
		}
		// Original name: Megatree S3
		public dynamic Megatree_S3 { 
			get { return _nodes[120]; }
		}
		// Original name: Megatree S4
		public dynamic Megatree_S4 { 
			get { return _nodes[121]; }
		}
		// Original name: Megatree S5
		public dynamic Megatree_S5 { 
			get { return _nodes[122]; }
		}
		// Original name: Megatree S6
		public dynamic Megatree_S6 { 
			get { return _nodes[123]; }
		}
		// Original name: Megatree S7
		public dynamic Megatree_S7 { 
			get { return _nodes[124]; }
		}
		// Original name: Megatree S8
		public dynamic Megatree_S8 { 
			get { return _nodes[125]; }
		}
		// Original name: Megatree S9
		public dynamic Megatree_S9 { 
			get { return _nodes[126]; }
		}
		// Original name: Megatree S10
		public dynamic Megatree_S10 { 
			get { return _nodes[127]; }
		}
		// Original name: Megatree S11
		public dynamic Megatree_S11 { 
			get { return _nodes[128]; }
		}
		// Original name: Megatree S12
		public dynamic Megatree_S12 { 
			get { return _nodes[129]; }
		}
		// Original name: Megatree S13
		public dynamic Megatree_S13 { 
			get { return _nodes[130]; }
		}
		// Original name: Megatree S14
		public dynamic Megatree_S14 { 
			get { return _nodes[131]; }
		}
		// Original name: Megatree S15
		public dynamic Megatree_S15 { 
			get { return _nodes[132]; }
		}
		// Original name: Megatree S16
		public dynamic Megatree_S16 { 
			get { return _nodes[133]; }
		}
		// Original name: Megatree S17
		public dynamic Megatree_S17 { 
			get { return _nodes[134]; }
		}
		// Original name: Megatree S18
		public dynamic Megatree_S18 { 
			get { return _nodes[135]; }
		}
		// Original name: Megatree S19
		public dynamic Megatree_S19 { 
			get { return _nodes[136]; }
		}
		// Original name: Megatree S20
		public dynamic Megatree_S20 { 
			get { return _nodes[137]; }
		}
		// Original name: Megatree S21
		public dynamic Megatree_S21 { 
			get { return _nodes[138]; }
		}
		// Original name: Megatree S22
		public dynamic Megatree_S22 { 
			get { return _nodes[139]; }
		}
		// Original name: Megatree S23
		public dynamic Megatree_S23 { 
			get { return _nodes[140]; }
		}
		// Original name: Megatree S24
		public dynamic Megatree_S24 { 
			get { return _nodes[141]; }
		}
		// Original name: Megatree S25
		public dynamic Megatree_S25 { 
			get { return _nodes[142]; }
		}
		// Original name: Megatree S26
		public dynamic Megatree_S26 { 
			get { return _nodes[143]; }
		}
		// Original name: Megatree S27
		public dynamic Megatree_S27 { 
			get { return _nodes[144]; }
		}
		// Original name: Megatree S28
		public dynamic Megatree_S28 { 
			get { return _nodes[145]; }
		}
		// Original name: Megatree
		public dynamic Megatree { 
			get { return _nodes[146]; }
		}
		// Original name: Root
		public dynamic Root { 
			get { return _nodes[147]; }
		}

		public UserScriptNode[] Nodes {
			get { return _nodes; }
		}

		private void _InvokeEffect(string effectName, IEnumerable<UserScriptNode> targetNodes, TimeSpan timeSpan, params object[] args) {
			Execute(CreateEffectNode(effectName, targetNodes, timeSpan, args));
		}
	}
}
